package net.omar.tutorial.Data;

import net.omar.tutorial.classes.Shopper;
import net.omar.tutorial.classes.Trader;

public class Market {
    public static Shopper SHOP = new Shopper("Root");
    public static Shopper compressors_P1 = SHOP.addNode(new Shopper("ᴄᴏᴍᴘʀᴇssᴏʀs"));
    public static Shopper compressOre_P2 = compressors_P1.addNode(new Shopper("ᴄᴏᴍᴘʀᴇss ᴏʀᴇ"));
    public static Trader cobblestoneToGoldNugget_t = compressOre_P2.addTrade(new Trader(1, "Cobblestone", 64, null, 0, "Gold Nugget", 1));
    public static Trader coalToGoldNugget_t = compressOre_P2.addTrade(new Trader(2, "Coal", 64, null, 0, "Gold Nugget", 2));
    public static Trader ironToGoldNugget_t = compressOre_P2.addTrade(new Trader(3, "Iron Ingot", 64, null, 0, "Gold Nugget", 3));
    public static Trader diamondToGoldNugget_t = compressOre_P2.addTrade(new Trader(4, "Diamond", 12, null, 0, "Gold Nugget", 5));
    public static Trader emeraldToGoldNugget_t = compressOre_P2.addTrade(new Trader(5, "Emerald", 12, null, 0, "Gold Nugget", 6));
    public static Trader ironToRawGold_t = compressOre_P2.addTrade(new Trader(7, "Iron Ingot", 64, "Iron Ingot", 32, "Raw Gold", 2));
    public static Trader diamondToRawGold_t = compressOre_P2.addTrade(new Trader(8, "Diamond", 64, null, 0, "Raw Gold", 3));
    public static Trader emeraldToRawGold_t = compressOre_P2.addTrade(new Trader(9, "Emerald", 64, null, 0, "Raw Gold", 6));
    public static Trader ironToGoldIngot_t = compressOre_P2.addTrade(new Trader(11, "Iron Ingot", 64, "Iron Ingot", 64, "Gold Ingot", 1));
    public static Trader diamondToGoldIngot_t = compressOre_P2.addTrade(new Trader(12, "Diamond", 64, "Diamond", 32, "Gold Ingot", 2));
    public static Trader emeraldToGoldIngot_t = compressOre_P2.addTrade(new Trader(13, "Emerald", 64, "Emerald", 32, "Gold Ingot", 3));
    public static Trader diamondToGoldBlock_t = compressOre_P2.addTrade(new Trader(15, "Diamond", 64, "Diamond", 64, "Gold Block", 1));
    public static Trader emeraldToGoldBlock_t = compressOre_P2.addTrade(new Trader(16, "Emerald", 64, "Emerald", 64, "Gold Block", 2));

    public static Shopper decompressOre_P2 = compressors_P1.addNode(new Shopper("ᴅᴇᴄᴏᴍᴘʀᴇss ᴏʀᴇ"));
    public static Trader goldNuggetToCobblestone_t = decompressOre_P2.addTrade(new Trader(1, "Gold Nugget", 1, null, 0, "Cobblestone", 64));
    public static Trader goldNuggetToCoal_t = decompressOre_P2.addTrade(new Trader(2, "Gold Nugget", 2, null, 0, "Coal", 64));
    public static Trader goldNuggetToIron_t = decompressOre_P2.addTrade(new Trader(3, "Gold Nugget", 3, null, 0, "Iron Ingot", 32));
    public static Trader goldNuggetToDiamond_t = decompressOre_P2.addTrade(new Trader(4, "Gold Nugget", 5, null, 0, "Diamond", 12));
    public static Trader goldNuggetToEmerald_t = decompressOre_P2.addTrade(new Trader(5, "Gold Nugget", 6, null, 0, "Emerald", 12));
    public static Trader rawGoldToIron_t = decompressOre_P2.addTrade(new Trader(7, "Raw Gold", 2, "Iron Ingot", 64, "Iron Ingot", 32));
    public static Trader rawGoldToDiamond_t = decompressOre_P2.addTrade(new Trader(8, "Raw Gold", 3, null, 0, "Diamond", 64));
    public static Trader rawGoldToEmerald_t = decompressOre_P2.addTrade(new Trader(9, "Raw Gold", 6, null, 0, "Emerald", 64));
    public static Trader goldIngotToIron_t = decompressOre_P2.addTrade(new Trader(11, "Gold Ingot", 1, "Iron Ingot", 64, "Iron Ingot", 64));
    public static Trader goldIngotToDiamond_t = decompressOre_P2.addTrade(new Trader(12, "Gold Ingot", 2, "Diamond", 64, "Diamond", 32));
    public static Trader goldIngotToEmerald_t = decompressOre_P2.addTrade(new Trader(13, "Gold Ingot", 3, "Emerald", 64, "Emerald", 32));
    public static Trader goldBlockToDiamond_t = decompressOre_P2.addTrade(new Trader(15, "Gold Block", 1, "Diamond", 64, "Diamond", 64));
    public static Trader goldBlockToEmerald_t = decompressOre_P2.addTrade(new Trader(16, "Gold Block", 2, "Emerald", 64, "Emerald", 64));



    public static Shopper swords_P1 = SHOP.addNode(new Shopper("sᴡᴏʀᴅs"));
    public static Shopper woodenSwords_P2 = swords_P1.addNode(new Shopper("ᴡᴏᴏᴅᴇɴ sᴡᴏʀᴅs"));
    public static Trader goldNuggetToWoodenSword_t = woodenSwords_P2.addTrade(new Trader(1, "Gold Nugget", 1, null, 0, "Wooden Sword", 1));
    public static Trader goldNuggetToWoodenSwordII_t = woodenSwords_P2.addTrade(new Trader(2, "Gold Nugget", 2, "Wooden Sword", 1, "Wooden Sword II", 1));
    public static Trader goldNuggetToWoodenSwordIII_t = woodenSwords_P2.addTrade(new Trader(3, "Gold Nugget", 4, "Wooden Sword", 1, "Wooden Sword III", 1));
    public static Trader goldNuggetToWoodenSwordIV_t = woodenSwords_P2.addTrade(new Trader(4, "Gold Nugget", 4, "Wooden Sword", 1, "Wooden Sword IV", 1));
    public static Trader goldNuggetToWoodenSwordV_t = woodenSwords_P2.addTrade(new Trader(5, "Gold Nugget", 5, "Wooden Sword", 1, "Wooden Sword V", 1));
    public static Trader goldNuggetToWoodenSwordVI_t = woodenSwords_P2.addTrade(new Trader(6, "Gold Nugget", 5, "Wooden Sword", 1, "Wooden Sword VI", 1));
    //public static Trade goldNuggetToWoodenSwordVII_t = woodenSwords_P2.addTrade(new Trade(1, "Gold Nugget", 1, null, 0, "Wooden Sword VII", 1));
    //public static Trade goldNuggetToWoodenSwordVIII_t = woodenSwords_P2.addTrade(new Trade(2, "Gold Nugget", 2, "Wooden Sword", 1, "Wooden Sword VIII", 1));
    //public static Trade goldNuggetToWoodenSwordIX_t = woodenSwords_P2.addTrade(new Trade(3, "Gold Nugget", 4, "Wooden Sword", 1, "Wooden Sword IX", 1));
    //public static Trade goldNuggetToWoodenSwordX_t = woodenSwords_P2.addTrade(new Trade(4, "Gold Nugget", 4, "Wooden Sword", 1, "Wooden Sword X", 1));
    //public static Trade goldNuggetToWoodenSwordXI_t = woodenSwords_P2.addTrade(new Trade(5, "Gold Nugget", 5, "Wooden Sword", 1, "Wooden Sword XI", 1));
    //public static Trade goldNuggetToWoodenSwordXII_t = woodenSwords_P2.addTrade(new Trade(6, "Gold Nugget", 5, "Wooden Sword", 1, "Wooden Sword XII", 1));
    public static Shopper stoneSwords_P2 = swords_P1.addNode(new Shopper("sᴛᴏɴᴇ sᴡᴏʀᴅs"));
    public static Trader goldNuggetToStoneSword_t = stoneSwords_P2.addTrade(new Trader(1, "Gold Nugget", 4, "Wooden Sword", 1, "Stone Sword", 1));
    public static Trader goldNuggetToStoneSwordII_t = stoneSwords_P2.addTrade(new Trader(2, "Gold Nugget", 4, "Stone Sword", 1, "Stone Sword II", 1));
    public static Trader goldNuggetToStoneSwordIII_t = stoneSwords_P2.addTrade(new Trader(3, "Gold Nugget", 5, "Stone Sword", 1, "Stone Sword III", 1));
    public static Trader rawgoldToStoneSwordIV_t = stoneSwords_P2.addTrade(new Trader(4, "Raw Gold", 1, "Stone Sword", 1, "Stone Sword IV", 1));
    public static Trader rawgoldToStoneSwordV_t = stoneSwords_P2.addTrade(new Trader(5, "Raw Gold", 2, "Stone Sword", 1, "Stone Sword V", 1));
    public static Trader rawgoldToStoneSwordVI_t = stoneSwords_P2.addTrade(new Trader(6, "Raw Gold", 4, "Stone Sword", 1, "Stone Sword VI", 1));
    public static Shopper ironSwords_P2 = swords_P1.addNode(new Shopper("ɪʀᴏɴ sᴡᴏʀᴅs"));

    public static Trader rawgoldToIronSword_t = ironSwords_P2.addTrade(new Trader(1, "Raw Gold", 4, "Stone Sword", 1, "Iron Sword", 1));
    public static Trader rawgoldToIronSwordII_t = ironSwords_P2.addTrade(new Trader(2, "Raw Gold", 6, "Iron Sword", 1, "Iron Sword II", 1));
    public static Trader goldIngotToIronSwordIII_t = ironSwords_P2.addTrade(new Trader(3, "Gold Ingot", 1, "Iron Sword", 1, "Iron Sword III", 1));
    public static Trader goldIngotToIronSwordIV_t = ironSwords_P2.addTrade(new Trader(4, "Gold Ingot", 2, "Iron Sword", 1, "Iron Sword IV", 1));
    public static Trader goldIngotToIronSwordV_t = ironSwords_P2.addTrade(new Trader(5, "Gold Ingot", 3, "Iron Sword", 1, "Iron Sword V", 1));
    public static Trader goldIngotToIronSwordVI_t = ironSwords_P2.addTrade(new Trader(6, "Gold Ingot", 5, "Iron Sword", 1, "Iron Sword VI", 1));


    public static Shopper diamondSwords_P2 = swords_P1.addNode(new Shopper("ᴅɪᴀᴍᴏɴᴅ sᴡᴏʀᴅs"));
        public static Trader goldIngotToDiamondSword_t = diamondSwords_P2.addTrade(new Trader(1, "Gold Ingot", 3, "Iron Sword", 1, "Diamond Sword", 1));
        public static Trader goldIngotToDiamondSwordII_t = diamondSwords_P2.addTrade(new Trader(2, "Gold Ingot", 4, "Diamond Sword", 1, "Diamond Sword II", 1));
        public static Trader goldIngotToDiamondSwordIII_t = diamondSwords_P2.addTrade(new Trader(3, "Gold Ingot", 6, "Diamond Sword", 1, "Diamond Sword III", 1));
        public static Trader goldBlockToDiamondSwordIV_t = diamondSwords_P2.addTrade(new Trader(4, "Gold Block", 2, "Diamond Sword", 1, "Diamond Sword IV", 1));
        public static Trader goldBlockToDiamondSwordV_t = diamondSwords_P2.addTrade(new Trader(5, "Gold Block", 4, "Diamond Sword", 1, "Diamond Sword V", 1));
        public static Trader goldBlockToDiamondSwordVI_t = diamondSwords_P2.addTrade(new Trader(6, "Gold Block", 6, "Diamond Sword", 1, "Diamond Sword VI", 1));
    public static Shopper netheriteSwords_P2 = swords_P1.addNode(new Shopper("ɴᴇᴛʜᴇʀɪᴛᴇ sᴡᴏʀᴅs"));
        public static Trader goldBlockToNetheriteSword_t = netheriteSwords_P2.addTrade(new Trader(1, "Gold Block", 8, "Diamond Sword", 1, "Netherite Sword", 1));
        public static Trader goldBlockToNetheriteSwordII_t = netheriteSwords_P2.addTrade(new Trader(2, "Gold Block", 10, "Netherite Sword", 1, "Netherite Sword II", 1));
        public static Trader goldBlockToNetheriteSwordIII_t = netheriteSwords_P2.addTrade(new Trader(3, "Gold Block", 12, "Netherite Sword", 1, "Netherite Sword III", 1));
        public static Trader goldBlockToNetheriteSwordIV_t = netheriteSwords_P2.addTrade(new Trader(4, "Gold Block", 14, "Netherite Sword", 1, "Netherite Sword IV", 1));
        public static Trader goldBlockToNetheriteSwordV_t = netheriteSwords_P2.addTrade(new Trader(5, "Gold Block", 16, "Netherite Sword", 1, "Netherite Sword V", 1));
        public static Trader goldBlockToNetheriteSwordVI_t = netheriteSwords_P2.addTrade(new Trader(6, "Gold Block", 18, "Netherite Sword", 1, "Netherite Sword VI", 1));


    public static Shopper armors_P1 = SHOP.addNode(new Shopper("ᴀʀᴍᴏʀs"));
    public static Shopper leatherArmors_P2 = armors_P1.addNode(new Shopper("ʟᴇᴀᴛʜᴇʀ ᴀʀᴍᴏʀs"));
        public static Trader goldNuggetToLeatherCap_t = leatherArmors_P2.addTrade(new Trader(1, "Gold Nugget", 1, null, 0, "Leather Cap", 1));
        public static Trader goldNuggetToLeatherTunic_t = leatherArmors_P2.addTrade(new Trader(2, "Gold Nugget", 1, null, 0, "Leather Tunic", 1));
        public static Trader goldNuggetToLeatherPants_t = leatherArmors_P2.addTrade(new Trader(3, "Gold Nugget", 1, null, 0, "Leather Pants", 1));
        public static Trader goldNuggetToLeatherBoots_t = leatherArmors_P2.addTrade(new Trader(4, "Gold Nugget", 1, null, 0, "Leather Boots", 1));
        public static Trader goldNuggetToLeatherCapII_t = leatherArmors_P2.addTrade(new Trader(5, "Gold Nugget", 4, "Leather Cap", 1, "Leather Cap II", 1));
        public static Trader goldNuggetToLeatherTunicII_t = leatherArmors_P2.addTrade(new Trader(6, "Gold Nugget", 4, "Leather Tunic", 1, "Leather Tunic II", 1));
        public static Trader goldNuggetToLeatherPantsII_t = leatherArmors_P2.addTrade(new Trader(7, "Gold Nugget", 4, "Leather Pants", 1, "Leather Pants II", 1));
        public static Trader goldNuggetToLeatherBootsII_t = leatherArmors_P2.addTrade(new Trader(8, "Gold Nugget", 4, "Leather Boots", 1, "Leather Boots II", 1));
        public static Trader goldNuggetToLeatherCapIII_t = leatherArmors_P2.addTrade(new Trader(9, "Gold Nugget", 6, "Leather Cap", 1, "Leather Cap III", 1));
        public static Trader goldNuggetToLeatherTunicIII_t = leatherArmors_P2.addTrade(new Trader(10, "Gold Nugget", 6, "Leather Tunic", 1, "Leather Tunic III", 1));
        public static Trader goldNuggetToLeatherPantsIII_t = leatherArmors_P2.addTrade(new Trader(11, "Gold Nugget", 6, "Leather Pants", 1, "Leather Pants III", 1));
        public static Trader goldNuggetToLeatherBootsIII_t = leatherArmors_P2.addTrade(new Trader(12, "Gold Nugget", 6, "Leather Boots", 1, "Leather Boots III", 1));
        public static Trader goldNuggetToLeatherCapIV_t = leatherArmors_P2.addTrade(new Trader(13, "Gold Nugget", 8, "Leather Cap", 1, "Leather Cap IV", 1));
        public static Trader goldNuggetToLeatherTunicIV_t = leatherArmors_P2.addTrade(new Trader(14, "Gold Nugget", 8, "Leather Tunic", 1, "Leather Tunic IV", 1));
        public static Trader goldNuggetToLeatherPantsIV_t = leatherArmors_P2.addTrade(new Trader(15, "Gold Nugget", 8, "Leather Pants", 1, "Leather Pants IV", 1));
        public static Trader goldNuggetToLeatherBootsIV_t = leatherArmors_P2.addTrade(new Trader(16, "Gold Nugget", 8, "Leather Boots", 1, "Leather Boots IV", 1));
    public static Shopper ironArmors_P2 = armors_P1.addNode(new Shopper("ɪʀᴏɴ ᴀʀᴍᴏʀs"));
        public static Trader rawgoldToIronHelmet_t = ironArmors_P2.addTrade(new Trader(1, "Raw Gold", 2, "Leather Cap", 1, "Iron Helmet", 1));
        public static Trader rawgoldToIronChestplate_t = ironArmors_P2.addTrade(new Trader(2, "Raw Gold", 2, "Leather Tunic", 1, "Iron Chestplate", 1));
        public static Trader rawgoldToIronLeggings_t = ironArmors_P2.addTrade(new Trader(3, "Raw Gold", 2, "Leather Pants", 1, "Iron Leggings", 1));
        public static Trader rawgoldToIronBoots_t = ironArmors_P2.addTrade(new Trader(4, "Raw Gold", 2, "Leather Boots", 1, "Iron Boots", 1));
        public static Trader rawgoldToIronHelmetII_t = ironArmors_P2.addTrade(new Trader(5, "Raw Gold", 4, "Iron Helmet", 1, "Iron Helmet II", 1));
        public static Trader rawgoldToIronChestplateII_t = ironArmors_P2.addTrade(new Trader(6, "Raw Gold", 4, "Iron Chestplate", 1, "Iron Chestplate II", 1));
        public static Trader rawgoldToIronLeggingsII_t = ironArmors_P2.addTrade(new Trader(7, "Raw Gold", 4, "Iron Leggings", 1, "Iron Leggings II", 1));
        public static Trader rawgoldToIronBootsII_t = ironArmors_P2.addTrade(new Trader(8, "Raw Gold", 4, "Iron Boots", 1, "Iron Boots II", 1));
        public static Trader goldIngotToIronHelmetIII_t = ironArmors_P2.addTrade(new Trader(9, "Gold Ingot", 3, "Iron Helmet", 1, "Iron Helmet III", 1));
        public static Trader goldIngotToIronChestplateIII_t = ironArmors_P2.addTrade(new Trader(10, "Gold Ingot", 3, "Iron Chestplate", 1, "Iron Chestplate III", 1));
        public static Trader goldIngotToIronLeggingsIII_t = ironArmors_P2.addTrade(new Trader(11, "Gold Ingot", 3, "Iron Leggings", 1, "Iron Leggings III", 1));
        public static Trader goldIngotToIronBootsIII_t = ironArmors_P2.addTrade(new Trader(12, "Gold Ingot", 3, "Iron Boots", 1, "Iron Boots III", 1));
    public static Shopper diamondArmors_P2 = armors_P1.addNode(new Shopper("ᴅɪᴀᴍᴏɴᴅ ᴀʀᴍᴏʀs"));
        public static Trader goldIngotToDiamondHelmet_t = diamondArmors_P2.addTrade(new Trader(1, "Gold Ingot", 4, "Iron Helmet", 1, "Diamond Helmet", 1));
        public static Trader goldIngotToDiamondChestplate_t = diamondArmors_P2.addTrade(new Trader(2, "Gold Ingot", 4, "Iron Chestplate", 1, "Diamond Chestplate", 1));
        public static Trader goldIngotToDiamondLeggings_t = diamondArmors_P2.addTrade(new Trader(3, "Gold Ingot", 4, "Iron Leggings", 1, "Diamond Leggings", 1));
        public static Trader goldIngotToDiamondBoots_t = diamondArmors_P2.addTrade(new Trader(4, "Gold Ingot", 4, "Iron Boots", 1, "Diamond Boots", 1));
        public static Trader goldIngotToDiamondHelmetII_t = diamondArmors_P2.addTrade(new Trader(5, "Gold Ingot", 6, "Diamond Helmet", 1, "Diamond Helmet II", 1));
        public static Trader goldIngotToDiamondChestplateII_t = diamondArmors_P2.addTrade(new Trader(6, "Gold Ingot", 6, "Diamond Chestplate", 1, "Diamond Chestplate II", 1));
        public static Trader goldIngotToDiamondLeggingsII_t = diamondArmors_P2.addTrade(new Trader(7, "Gold Ingot", 6, "Diamond Leggings", 1, "Diamond Leggings II", 1));
        public static Trader goldIngotToDiamondBootsII_t = diamondArmors_P2.addTrade(new Trader(8, "Gold Ingot", 6, "Diamond Boots", 1, "Diamond Boots II", 1));
        public static Trader goldBlockToDiamondHelmetIII_t = diamondArmors_P2.addTrade(new Trader(9, "Gold Block", 3, "Diamond Helmet", 1, "Diamond Helmet III", 1));
        public static Trader goldBlockToDiamondChestplateIII_t = diamondArmors_P2.addTrade(new Trader(10, "Gold Block", 3, "Diamond Chestplate", 1, "Diamond Chestplate III", 1));
        public static Trader goldBlockToDiamondLeggingsIII_t = diamondArmors_P2.addTrade(new Trader(11, "Gold Block", 3, "Diamond Leggings", 1, "Diamond Leggings III", 1));
        public static Trader goldBlockToDiamondBootsIII_t = diamondArmors_P2.addTrade(new Trader(12, "Gold Block", 3, "Diamond Boots", 1, "Diamond Boots III", 1));
    public static Shopper netheriteArmors_P2 = armors_P1.addNode(new Shopper("ɴᴇᴛʜᴇʀɪᴛᴇ ᴀʀᴍᴏʀs"));
        public static Trader goldBlockToNetheriteHelmet_t = netheriteArmors_P2.addTrade(new Trader(1, "Gold Block", 7, "Diamond Helmet", 1, "Netherite Helmet", 1));
        public static Trader goldBlockToNetheriteChestplate_t = netheriteArmors_P2.addTrade(new Trader(2, "Gold Block", 7, "Diamond Chestplate", 1, "Netherite Chestplate", 1));
        public static Trader goldBlockToNetheriteLeggings_t = netheriteArmors_P2.addTrade(new Trader(3, "Gold Block", 7, "Diamond Leggings", 1, "Netherite Leggings", 1));
        public static Trader goldBlockToNetheriteBoots_t = netheriteArmors_P2.addTrade(new Trader(4, "Gold Block", 7, "Diamond Boots", 1, "Netherite Boots", 1));
        public static Trader goldBlockToNetheriteHelmetII_t = netheriteArmors_P2.addTrade(new Trader(5, "Gold Block", 9, "Netherite Helmet", 1, "Netherite Helmet II", 1));
        public static Trader goldBlockToNetheriteChestplateII_t = netheriteArmors_P2.addTrade(new Trader(6, "Gold Block", 9, "Netherite Chestplate", 1, "Netherite Chestplate II", 1));
        public static Trader goldBlockToNetheriteLeggingsII_t = netheriteArmors_P2.addTrade(new Trader(7, "Gold Block", 9, "Netherite Leggings", 1, "Netherite Leggings II", 1));
        public static Trader goldBlockToNetheriteBootsII_t = netheriteArmors_P2.addTrade(new Trader(8, "Gold Block", 9, "Netherite Boots", 1, "Netherite Boots II", 1));
        public static Trader goldBlockToNetheriteHelmetIII_t = netheriteArmors_P2.addTrade(new Trader(9, "Gold Block", 11, "Netherite Helmet", 1, "Netherite Helmet III", 1));
        public static Trader goldBlockToNetheriteChestplateIII_t = netheriteArmors_P2.addTrade(new Trader(10, "Gold Block", 11, "Netherite Chestplate", 1, "Netherite Chestplate III", 1));
        public static Trader goldBlockToNetheriteLeggingsIII_t = netheriteArmors_P2.addTrade(new Trader(11, "Gold Block", 11, "Netherite Leggings", 1, "Netherite Leggings III", 1));
        public static Trader goldBlockToNetheriteBootsIII_t = netheriteArmors_P2.addTrade(new Trader(12, "Gold Block", 11, "Netherite Boots", 1, "Netherite Boots III", 1));
        public static Trader goldBlockToNetheriteHelmetIV_t = netheriteArmors_P2.addTrade(new Trader(13, "Gold Block", 13, "Netherite Helmet", 1, "Netherite Helmet IV", 1));
        public static Trader goldBlockToNetheriteChestplateIV_t = netheriteArmors_P2.addTrade(new Trader(14, "Gold Block", 13, "Netherite Chestplate", 1, "Netherite Chestplate IV", 1));
        public static Trader goldBlockToNetheriteLeggingsIV_t = netheriteArmors_P2.addTrade(new Trader(15, "Gold Block", 13, "Netherite Leggings", 1, "Netherite Leggings IV", 1));
        public static Trader goldBlockToNetheriteBootsIV_t = netheriteArmors_P2.addTrade(new Trader(16, "Gold Block", 13, "Netherite Boots", 1, "Netherite Boots IV", 1));

    public static Shopper pickaxes_P1 = SHOP.addNode(new Shopper("ᴘɪᴄᴋᴀxᴇs"));
    public static Shopper woodenPickaxes_P2 = pickaxes_P1.addNode(new Shopper("ᴡᴏᴏᴅᴇɴ ᴘɪᴄᴋᴀxᴇs"));
        public static Trader goldNuggetToWoodenPickaxe_t = woodenPickaxes_P2.addTrade(new Trader(1, "Gold Nugget", 1, null, 0, "Wooden Pickaxe", 1));
        public static Trader goldNuggetToWoodenPickaxeII_t = woodenPickaxes_P2.addTrade(new Trader(2, "Gold Nugget", 2, "Wooden Pickaxe", 1, "Wooden Pickaxe II", 1));
        public static Trader goldNuggetToWoodenPickaxeIII_t = woodenPickaxes_P2.addTrade(new Trader(3, "Gold Nugget", 4, "Wooden Pickaxe", 1, "Wooden Pickaxe III", 1));
        public static Trader goldNuggetToWoodenPickaxeIV_t = woodenPickaxes_P2.addTrade(new Trader(4, "Gold Nugget", 4, "Wooden Pickaxe", 1, "Wooden Pickaxe IV", 1));
        public static Trader goldNuggetToWoodenPickaxeV_t = woodenPickaxes_P2.addTrade(new Trader(5, "Gold Nugget", 5, "Wooden Pickaxe", 1, "Wooden Pickaxe V", 1));
        public static Trader goldNuggetToWoodenPickaxeVI_t = woodenPickaxes_P2.addTrade(new Trader(6, "Gold Nugget", 5, "Wooden Pickaxe", 1, "Wooden Pickaxe VI", 1));
    public static Shopper stonePickaxes_P2 = pickaxes_P1.addNode(new Shopper("sᴛᴏɴᴇ ᴘɪᴄᴋᴀxᴇs"));
        public static Trader goldNuggetToStonePickaxe_t = stonePickaxes_P2.addTrade(new Trader(1, "Gold Nugget", 4, "Wooden Pickaxe", 1, "Stone Pickaxe", 1));
        public static Trader goldNuggetToStonePickaxeII_t = stonePickaxes_P2.addTrade(new Trader(2, "Gold Nugget", 4, "Stone Pickaxe", 1, "Stone Pickaxe II", 1));
        public static Trader goldNuggetToStonePickaxeIII_t = stonePickaxes_P2.addTrade(new Trader(3, "Gold Nugget", 5, "Stone Pickaxe", 1, "Stone Pickaxe III", 1));
        public static Trader rawgoldToStonePickaxeIV_t = stonePickaxes_P2.addTrade(new Trader(4, "Raw Gold", 1, "Stone Pickaxe", 1, "Stone Pickaxe IV", 1));
        public static Trader rawgoldToStonePickaxeV_t = stonePickaxes_P2.addTrade(new Trader(5, "Raw Gold", 2, "Stone Pickaxe", 1, "Stone Pickaxe V", 1));
        public static Trader rawgoldToStonePickaxeVI_t = stonePickaxes_P2.addTrade(new Trader(6, "Raw Gold", 4, "Stone Pickaxe", 1, "Stone Pickaxe VI", 1));
    public static Shopper ironPickaxes_P2 = pickaxes_P1.addNode(new Shopper("ɪʀᴏɴ ᴘɪᴄᴋᴀxᴇs"));
    public static Trader rawgoldToIronPickaxe_t = ironPickaxes_P2.addTrade(new Trader(1, "Raw Gold", 4, "Stone Pickaxe", 1, "Iron Pickaxe", 1));
    public static Trader rawgoldToIronPickaxeII_t = ironPickaxes_P2.addTrade(new Trader(2, "Raw Gold", 6, "Iron Pickaxe", 1, "Iron Pickaxe II", 1));
    public static Trader goldIngotToIronPickaxeIII_t = ironPickaxes_P2.addTrade(new Trader(3, "Gold Ingot", 1, "Iron Pickaxe", 1, "Iron Pickaxe III", 1));
    public static Trader goldIngotToIronPickaxeIV_t = ironPickaxes_P2.addTrade(new Trader(4, "Gold Ingot", 2, "Iron Pickaxe", 1, "Iron Pickaxe IV", 1));
    public static Trader goldIngotToIronPickaxeV_t = ironPickaxes_P2.addTrade(new Trader(5, "Gold Ingot", 3, "Iron Pickaxe", 1, "Iron Pickaxe V", 1));
    public static Trader goldIngotToIronPickaxeVI_t = ironPickaxes_P2.addTrade(new Trader(6, "Gold Ingot", 5, "Iron Pickaxe", 1, "Iron Pickaxe VI", 1));
    public static Shopper diamondPickaxes_P2 = pickaxes_P1.addNode(new Shopper("ᴅɪᴀᴍᴏɴᴅ ᴘɪᴄᴋᴀxᴇs"));
    public static Trader goldIngotToDiamondPickaxe_t = diamondPickaxes_P2.addTrade(new Trader(1, "Gold Ingot", 3, "Iron Pickaxe", 1, "Diamond Pickaxe", 1));
    public static Trader goldIngotToDiamondPickaxeII_t = diamondPickaxes_P2.addTrade(new Trader(2, "Gold Ingot", 4, "Diamond Pickaxe", 1, "Diamond Pickaxe II", 1));
    public static Trader goldIngotToDiamondPickaxeIII_t = diamondPickaxes_P2.addTrade(new Trader(3, "Gold Ingot", 6, "Diamond Pickaxe", 1, "Diamond Pickaxe III", 1));
    public static Trader goldBlockToDiamondPickaxeIV_t = diamondPickaxes_P2.addTrade(new Trader(4, "Gold Block", 2, "Diamond Pickaxe", 1, "Diamond Pickaxe IV", 1));
    public static Trader goldBlockToDiamondPickaxeV_t = diamondPickaxes_P2.addTrade(new Trader(5, "Gold Block", 4, "Diamond Pickaxe", 1, "Diamond Pickaxe V", 1));
    public static Trader goldBlockToDiamondPickaxeVI_t = diamondPickaxes_P2.addTrade(new Trader(6, "Gold Block", 6, "Diamond Pickaxe", 1, "Diamond Pickaxe VI", 1));
    public static Shopper netheritePickaxes_P2 = pickaxes_P1.addNode(new Shopper("ɴᴇᴛʜᴇʀɪᴛᴇ ᴘɪᴄᴋᴀxᴇs"));
    public static Trader goldBlockToNetheritePickaxe_t = netheritePickaxes_P2.addTrade(new Trader(1, "Gold Block", 8, "Diamond Pickaxe", 1, "Netherite Pickaxe", 1));
    public static Trader goldBlockToNetheritePickaxeII_t = netheritePickaxes_P2.addTrade(new Trader(2, "Gold Block", 10, "Netherite Pickaxe", 1, "Netherite Pickaxe II", 1));
    public static Trader goldBlockToNetheritePickaxeIII_t = netheritePickaxes_P2.addTrade(new Trader(3, "Gold Block", 12, "Netherite Pickaxe", 1, "Netherite Pickaxe III", 1));
    public static Trader goldBlockToNetheritePickaxeIV_t = netheritePickaxes_P2.addTrade(new Trader(4, "Gold Block", 14, "Netherite Pickaxe", 1, "Netherite Pickaxe IV", 1));
    public static Trader goldBlockToNetheritePickaxeV_t = netheritePickaxes_P2.addTrade(new Trader(5, "Gold Block", 16, "Netherite Pickaxe", 1, "Netherite Pickaxe V", 1));
    public static Trader goldBlockToNetheritePickaxeVI_t = netheritePickaxes_P2.addTrade(new Trader(6, "Gold Block", 18, "Netherite Pickaxe", 1, "Netherite Pickaxe VI", 1));




    public static Shopper axes_P1 = SHOP.addNode(new Shopper("ᴀxᴇs"));
    public static Shopper woodenAxes_P2 = axes_P1.addNode(new Shopper("ᴡᴏᴏᴅᴇɴ ᴀxᴇs"));
    public static Trader goldNuggetToWoodenAxe_t = woodenAxes_P2.addTrade(new Trader(1, "Gold Nugget", 2, null, 0, "Wooden Axe", 1));
    public static Trader goldNuggetToWoodenAxeII_t = woodenAxes_P2.addTrade(new Trader(2, "Gold Nugget", 2, "Wooden Axe", 1, "Wooden Axe II", 1));
    public static Trader goldNuggetToWoodenAxeIII_t = woodenAxes_P2.addTrade(new Trader(3, "Gold Nugget", 4, "Wooden Axe", 1, "Wooden Axe III", 1));
    public static Trader goldNuggetToWoodenAxeIV_t = woodenAxes_P2.addTrade(new Trader(4, "Gold Nugget", 4, "Wooden Axe", 1, "Wooden Axe IV", 1));
    public static Trader goldNuggetToWoodenAxeV_t = woodenAxes_P2.addTrade(new Trader(5, "Gold Nugget", 5, "Wooden Axe", 1, "Wooden Axe V", 1));
    public static Trader goldNuggetToWoodenAxeVI_t = woodenAxes_P2.addTrade(new Trader(6, "Gold Nugget", 5, "Wooden Axe", 1, "Wooden Axe VI", 1));
    public static Shopper stoneAxes_P2 = axes_P1.addNode(new Shopper("sᴛᴏɴᴇ ᴀxᴇs"));
    public static Trader goldNuggetToStoneAxe_t = stoneAxes_P2.addTrade(new Trader(1, "Gold Nugget", 4, "Wooden Axe", 1, "Stone Axe", 1));
    public static Trader goldNuggetToStoneAxeII_t = stoneAxes_P2.addTrade(new Trader(2, "Gold Nugget", 4, "Stone Axe", 1, "Stone Axe II", 1));
    public static Trader goldNuggetToStoneAxeIII_t = stoneAxes_P2.addTrade(new Trader(3, "Gold Nugget", 5, "Stone Axe", 1, "Stone Axe III", 1));
    public static Trader rawgoldToStoneAxeIV_t = stoneAxes_P2.addTrade(new Trader(4, "Raw Gold", 1, "Stone Axe", 1, "Stone Axe IV", 1));
    public static Trader rawgoldToStoneAxeV_t = stoneAxes_P2.addTrade(new Trader(5, "Raw Gold", 2, "Stone Axe", 1, "Stone Axe V", 1));
    public static Trader rawgoldToStoneAxeVI_t = stoneAxes_P2.addTrade(new Trader(6, "Raw Gold", 4, "Stone Axe", 1, "Stone Axe VI", 1));
    public static Shopper ironAxes_P2 = axes_P1.addNode(new Shopper("ɪʀᴏɴ ᴀxᴇs"));
    public static Trader rawgoldToIronAxe_t = ironAxes_P2.addTrade(new Trader(1, "Raw Gold", 4, "Stone Axe", 1, "Iron Axe", 1));
    public static Trader rawgoldToIronAxeII_t = ironAxes_P2.addTrade(new Trader(2, "Raw Gold", 6, "Iron Axe", 1, "Iron Axe II", 1));
    public static Trader goldIngotToIronAxeIII_t = ironAxes_P2.addTrade(new Trader(3, "Gold Ingot", 1, "Iron Axe", 1, "Iron Axe III", 1));
    public static Trader goldIngotToIronAxeIV_t = ironAxes_P2.addTrade(new Trader(4, "Gold Ingot", 2, "Iron Axe", 1, "Iron Axe IV", 1));
    public static Trader goldIngotToIronAxeV_t = ironAxes_P2.addTrade(new Trader(5, "Gold Ingot", 3, "Iron Axe", 1, "Iron Axe V", 1));
    public static Trader goldIngotToIronAxeVI_t = ironAxes_P2.addTrade(new Trader(6, "Gold Ingot", 5, "Iron Axe", 1, "Iron Axe VI", 1));
    public static Shopper diamondAxes_P2 = axes_P1.addNode(new Shopper("ᴅɪᴀᴍᴏɴᴅ ᴀxᴇs"));
    public static Trader goldIngotToDiamondAxe_t = diamondAxes_P2.addTrade(new Trader(1, "Gold Ingot", 3, "Iron Axe", 1, "Diamond Axe", 1));
    public static Trader goldIngotToDiamondAxeII_t = diamondAxes_P2.addTrade(new Trader(2, "Gold Ingot", 4, "Diamond Axe", 1, "Diamond Axe II", 1));
    public static Trader goldIngotToDiamondAxeIII_t = diamondAxes_P2.addTrade(new Trader(3, "Gold Ingot", 6, "Diamond Axe", 1, "Diamond Axe III", 1));
    public static Trader goldBlockToDiamondAxeIV_t = diamondAxes_P2.addTrade(new Trader(4, "Gold Block", 2, "Diamond Axe", 1, "Diamond Axe IV", 1));
    public static Trader goldBlockToDiamondAxeV_t = diamondAxes_P2.addTrade(new Trader(5, "Gold Block", 4, "Diamond Axe", 1, "Diamond Axe V", 1));
    public static Trader goldBlockToDiamondAxeVI_t = diamondAxes_P2.addTrade(new Trader(6, "Gold Block", 6, "Diamond Axe", 1, "Diamond Axe VI", 1));
    public static Shopper netheriteAxes_P2 = axes_P1.addNode(new Shopper("ɴᴇᴛʜᴇʀɪᴛᴇ ᴀxᴇs"));
    public static Trader goldBlockToNetheriteAxe_t = netheriteAxes_P2.addTrade(new Trader(1, "Gold Block", 8, "Diamond Axe", 1, "Netherite Axe", 1));
    public static Trader goldBlockToNetheriteAxeII_t = netheriteAxes_P2.addTrade(new Trader(2, "Gold Block", 10, "Netherite Axe", 1, "Netherite Axe II", 1));
    public static Trader goldBlockToNetheriteAxeIII_t = netheriteAxes_P2.addTrade(new Trader(3, "Gold Block", 12, "Netherite Axe", 1, "Netherite Axe III", 1));
    public static Trader goldBlockToNetheriteAxeIV_t = netheriteAxes_P2.addTrade(new Trader(4, "Gold Block", 14, "Netherite Axe", 1, "Netherite Axe IV", 1));
    public static Trader goldBlockToNetheriteAxeV_t = netheriteAxes_P2.addTrade(new Trader(5, "Gold Block", 16, "Netherite Axe", 1, "Netherite Axe V", 1));
    public static Trader goldBlockToNetheriteAxeVI_t = netheriteAxes_P2.addTrade(new Trader(6, "Gold Block", 18, "Netherite Axe", 1, "Netherite Axe VI", 1));

    public static Shopper misc_P1 = SHOP.addNode(new Shopper("ᴍɪsᴄ"));
    public static Shopper foods_P2 = misc_P1.addNode(new Shopper("ғᴏᴏᴅs"));
    public static Trader goldNuggetToSteak_t = foods_P2.addTrade(new Trader(1, "Gold Nugget", 4, null, 0, "Steak", 32));
    public static Trader goldBlockToGoldCarrot_t = foods_P2.addTrade(new Trader(2, "Gold Block", 1, null, 0, "Golden Carrot", 16));
    public static Trader goldBlockToGoldApple_t = foods_P2.addTrade(new Trader(3, "Gold Block", 16, null, 0, "Golden Apple", 2));
    public static Trader goldBlockToEnchantedGoldApple_t = foods_P2.addTrade(new Trader(4, "Gold Block", 32, null, 0, "Enchanted Golden Apple", 1));
    public static Trader goldBlockToEnchantedGoldAppleII_t = foods_P2.addTrade(new Trader(5, "Gold Block", 64, null, 0, "Enchanted Golden Apple II", 2));
    public static Shopper pvpUtilitys_P2 = misc_P1.addNode(new Shopper("ᴘᴠᴘ ᴜᴛɪʟɪᴛɪᴇs"));
    public static Trader goldIngotToObsidian_t = pvpUtilitys_P2.addTrade(new Trader(1, "Gold Ingot", 10, null, 0, "Obsidian", 16));
    public static Trader goldIngotToEndCrystal_t = pvpUtilitys_P2.addTrade(new Trader(2, "Gold Ingot", 10, "Raw Gold", 10, "End Crystal", 1));
    public static Trader rawgoldToShield_t = pvpUtilitys_P2.addTrade(new Trader(3, "Raw Gold", 6, null, 0, "Shield", 1));
    public static Trader rawgoldToShieldII_t = pvpUtilitys_P2.addTrade(new Trader(4, "Raw Gold", 12, null, 0, "Shield II", 1));
    public static Trader rawgoldToShieldIII_t = pvpUtilitys_P2.addTrade(new Trader(5, "Raw Gold", 32, null, 0, "Shield III", 1));
    public static Trader rawgoldToBow_t = pvpUtilitys_P2.addTrade(new Trader(6, "Raw Gold", 1, null, 0, "Bow", 1));
    public static Trader rawgoldToBowII_t = pvpUtilitys_P2.addTrade(new Trader(7, "Raw Gold", 4, null, 0, "Bow II", 1));
    public static Trader rawgoldToBowIII_t = pvpUtilitys_P2.addTrade(new Trader(8, "Raw Gold", 12, null, 0, "Bow III", 1));
    public static Trader rawgoldToBowIV_t = pvpUtilitys_P2.addTrade(new Trader(9, "Raw Gold", 48, null, 0, "Bow IV", 1));
    public static Trader rawgoldToBowV_t = pvpUtilitys_P2.addTrade(new Trader(10, "Raw Gold", 64, null, 0, "Bow V", 1));
    public static Trader goldIngotToBowVI_t = pvpUtilitys_P2.addTrade(new Trader(11, "Gold Ingot", 2, null, 0, "Bow VI", 1));
    public static Trader goldIngotToBowVII_t = pvpUtilitys_P2.addTrade(new Trader(12, "Gold Ingot", 1, null, 0, "Bow VII", 1));
    public static Trader goldNuggetToArrow_t = pvpUtilitys_P2.addTrade(new Trader(13, "Gold Nugget", 32, null, 0, "Arrow", 6));
    public static Trader goldNuggetToSpectralArrow_t = pvpUtilitys_P2.addTrade(new Trader(14, "Gold Nugget", 32, null, 0, "Spectral Arrow", 1));
    public static Trader goldIngotToArrowofHarming_t = pvpUtilitys_P2.addTrade(new Trader(15, "Gold Ingot", 1, null, 0, "Arrow of Harming", 1));
    public static Trader goldIngotToArrowofHarmingII_t = pvpUtilitys_P2.addTrade(new Trader(16, "Gold Ingot", 2, null, 0, "Arrow of Harming II", 1));
    public static Trader rawgoldToShears_t = pvpUtilitys_P2.addTrade(new Trader(17, "Raw Gold", 1, null, 0, "Shears", 1));
    public static Trader rawgoldToShearsII_t = pvpUtilitys_P2.addTrade(new Trader(18, "Raw Gold", 4, null, 0, "Shears II", 1));
    public static Trader rawgoldToShearsIII_t = pvpUtilitys_P2.addTrade(new Trader(19, "Raw Gold", 7, null, 0, "Shears III", 1));
    public static Trader rawgoldToCobweb_t = pvpUtilitys_P2.addTrade(new Trader(20, "Raw Gold", 32, null, 0, "Cobweb", 16));
    public static Trader goldBlockToTotemofUndying_t = pvpUtilitys_P2.addTrade(new Trader(21, "Gold Block", 64, "Gold Block", 32, "Totem of Undying", 1));

    public static Shopper shulkers_P2 = misc_P1.addNode(new Shopper("sʜᴜʟᴋᴇʀs"));
    public static Trader rawgoldToBox_t = shulkers_P2.addTrade(new Trader(1, "Raw Gold", 3, null, 0, "Box", 1));
    public static Trader rawgoldToWhiteBox_t = shulkers_P2.addTrade(new Trader(2, "Raw Gold", 3, null, 0, "White Shulker Box", 1));
    public static Trader rawgoldToOrangeBox_t = shulkers_P2.addTrade(new Trader(3, "Raw Gold", 3, null, 0, "Orange Shulker Box", 1));
    public static Trader rawgoldToMagentaBox_t = shulkers_P2.addTrade(new Trader(4, "Raw Gold", 3, null, 0, "Magenta Shulker Box", 1));
    public static Trader rawgoldToLightBlueBox_t = shulkers_P2.addTrade(new Trader(5, "Raw Gold", 3, null, 0, "Light Blue Shulker Box", 1));
    public static Trader rawgoldToYellowBox_t = shulkers_P2.addTrade(new Trader(6, "Raw Gold", 3, null, 0, "Yellow Shulker Box", 1));
    public static Trader rawgoldToLimeBox_t = shulkers_P2.addTrade(new Trader(7, "Raw Gold", 3, null, 0, "Lime Shulker Box", 1));
    public static Trader rawgoldToPinkBox_t = shulkers_P2.addTrade(new Trader(8, "Raw Gold", 3, null, 0, "Pink Shulker Box", 1));
    public static Trader rawgoldToRedBox_t = shulkers_P2.addTrade(new Trader(9, "Raw Gold", 3, null, 0, "Red Shulker Box", 1));
    public static Trader rawgoldToPurpleBox_t = shulkers_P2.addTrade(new Trader(10, "Raw Gold", 3, null, 0, "Purple Shulker Box", 1));
    public static Trader rawgoldToCyanBox_t = shulkers_P2.addTrade(new Trader(11, "Raw Gold", 3, null, 0, "Cyan Shulker Box", 1));
    public static Trader rawgoldToBlueBox_t = shulkers_P2.addTrade(new Trader(12, "Raw Gold", 3, null, 0, "Blue Shulker Box", 1));
    public static Trader rawgoldToBrownBox_t = shulkers_P2.addTrade(new Trader(13, "Raw Gold", 3, null, 0, "Brown Shulker Box", 1));
    public static Trader rawgoldToLightGrayBox_t = shulkers_P2.addTrade(new Trader(14, "Raw Gold", 3, null, 0, "Light Gray Shulker Box", 1));
    public static Trader rawgoldToGrayBox_t = shulkers_P2.addTrade(new Trader(15, "Raw Gold", 3, null, 0, "Gray Shulker Box", 1));
    public static Trader rawgoldToBlackBox_t = shulkers_P2.addTrade(new Trader(16, "Raw Gold", 3, null, 0, "Black Shulker Box", 1));
    public static Shopper potions_P2 = misc_P1.addNode(new Shopper("ᴘᴏᴛɪᴏɴs"));
    public static Trader rawgoldToPotionofInvisibility_t = potions_P2.addTrade(new Trader(1, "Raw Gold", 3, null, 0, "Potion of Invisibility", 1));
    public static Trader rawgoldToPotionofFireResistance_t = potions_P2.addTrade(new Trader(2, "Raw Gold", 3, null, 0, "Potion of Fire Resistance", 1));
    public static Trader rawgoldToPotionofSwiftness_t = potions_P2.addTrade(new Trader(3, "Raw Gold", 3, null, 0, "Potion of Swiftness", 1));
    public static Trader rawgoldToSplashPotionofHealing_t = potions_P2.addTrade(new Trader(4, "Raw Gold", 4, null, 0, "Splash Potion of Healing", 1));
    public static Trader rawgoldToPotionofStrength_t = potions_P2.addTrade(new Trader(5, "Raw Gold", 8, null, 0, "Potion of Strength", 1));
    public static Trader rawgoldToSplashPotionofRegeneration_t = potions_P2.addTrade(new Trader(6, "Raw Gold", 3, null, 0, "Splash Potion of Regeneration", 1));
    public static Trader rawgoldToSplashPotionofSlowFalling_t = potions_P2.addTrade(new Trader(7, "Raw Gold", 3, null, 0, "Splash Potion of Slow Falling", 1));
    public static Trader rawgoldToSplashPotionofSlowness_t = potions_P2.addTrade(new Trader(8, "Raw Gold", 4, null, 0, "Splash Potion of Slowness", 1));
    public static Trader rawgoldToSplashPotionofHarming_t = potions_P2.addTrade(new Trader(9, "Raw Gold", 10, null, 0, "Splash Potion of Harming", 1));
    public static Trader rawgoldToSplashPotionofPoison_t = potions_P2.addTrade(new Trader(10, "Raw Gold", 12, null, 0, "Splash Potion of Poison", 1));
    public static Shopper elytra_P2 = misc_P1.addNode(new Shopper("ᴇʟʏᴛʀᴀ"));
    public static Trader goldNuggetToFirework_t = elytra_P2.addTrade(new Trader(1, "Gold Nugget", 3, null, 0, "Firework", 12));
    public static Trader rawGoldToFireworkII_t = elytra_P2.addTrade(new Trader(2, "Raw Gold", 2, null, 0, "Firework II", 12));
    public static Trader goldNuggetToElytra_t = elytra_P2.addTrade(new Trader(3, "Gold Nugget", 1, null, 0, "Elytra", 1));
    public static Trader goldNuggetToElytraII_t = elytra_P2.addTrade(new Trader(4, "Gold Nugget", 3, "Elytra", 1, "Elytra II", 1));
    public static Trader rawGoldToElytraIII_t = elytra_P2.addTrade(new Trader(5, "Raw Gold", 2, "Elytra", 1, "Elytra III", 1));
    public static Trader rawGoldToElytraIV_t = elytra_P2.addTrade(new Trader(6, "Raw Gold", 4, "Elytra", 1, "Elytra IV", 1));
    public static Trader goldIngotToElytraV_t = elytra_P2.addTrade(new Trader(7, "Gold Ingot", 3, "Elytra", 1, "Elytra V", 1));
    public static Trader goldBlockToElytraVI_t = elytra_P2.addTrade(new Trader(8, "Gold Block", 2, "Elytra", 1, "Elytra VI", 1));

    public static Shopper blocks_P2 = misc_P1.addNode(new Shopper("ʙʟᴏᴄᴋs"));
    public static Trader rawGoldToWhite_t = blocks_P2.addTrade(new Trader(1, "Raw Gold", 5, null, 0, "White", 16));
    public static Trader rawGoldToOrange_t = blocks_P2.addTrade(new Trader(2, "Raw Gold", 5, null, 0, "Orange", 16));
    public static Trader rawGoldToMagenta_t = blocks_P2.addTrade(new Trader(3, "Raw Gold", 5, null, 0, "Magenta", 16));
    public static Trader rawGoldToLightBlue_t = blocks_P2.addTrade(new Trader(4, "Raw Gold", 5, null, 0, "Light Blue", 16));
    public static Trader rawGoldToYellow_t = blocks_P2.addTrade(new Trader(5, "Raw Gold", 5, null, 0, "Yellow", 16));
    public static Trader rawGoldToLime_t = blocks_P2.addTrade(new Trader(6, "Raw Gold", 5, null, 0, "Lime", 16));
    public static Trader rawGoldToPink_t = blocks_P2.addTrade(new Trader(7, "Raw Gold", 5, null, 0, "Pink", 16));
    public static Trader rawGoldToRed_t = blocks_P2.addTrade(new Trader(8, "Raw Gold", 3, null, 0, "Red", 16));
    public static Trader rawGoldToPurple_t = blocks_P2.addTrade(new Trader(9, "Raw Gold", 3, null, 0, "Purple", 16));
    public static Trader rawGoldToCyan_t = blocks_P2.addTrade(new Trader(10, "Raw Gold", 3, null, 0, "Cyan", 16));
    public static Trader rawGoldToBlue_t = blocks_P2.addTrade(new Trader(11, "Raw Gold", 3, null, 0, "Blue", 16));
    public static Trader rawGoldToBrown_t = blocks_P2.addTrade(new Trader(12, "Raw Gold", 3, null, 0, "Brown", 16));
    public static Trader rawGoldToLightGray_t = blocks_P2.addTrade(new Trader(13, "Raw Gold", 3, null, 0, "Light Gray", 16));
    public static Trader rawGoldToGray_t = blocks_P2.addTrade(new Trader(14, "Raw Gold", 3, null, 0, "Gray", 16));
    public static Trader rawGoldToBlack_t = blocks_P2.addTrade(new Trader(15, "Raw Gold", 3, null, 0, "Black", 16));
}
